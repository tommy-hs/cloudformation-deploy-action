# Copyright 2019 Amazon.com, Inc. and its affiliates. All Rights Reserved.
#
# Licensed under the Amazon Software License (the 'License').
# You may not use this file except in compliance with the License.
# A copy of the License is located at
#
#   http://aws.amazon.com/asl/
#
# or in the 'license' file accompanying this file. This file is distributed
# on an 'AS IS' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
# express or implied. See the License for the specific language governing
# permissions and limitations under the License.

AWSTemplateFormatVersion: "2010-09-09"
Description: "Pipeline Template"

Parameters:
  Username:
    Description: The github username e.g tommygingras
    Type: String
  RepositoryName:
    Description: e.g someRepo
    Type: String
  BranchName:
    Type: String
    Default: "master"
  Setup:
    Type: String
    Default: false
  BucketName:
    Type: String
    Default: halfserious-devops-templates

Conditions:
  BranchMaster: !Equals [!Ref BranchName, "master"]
  BranchDevelop: !Equals [!Ref BranchName, "develop"]
  Setup: !Equals [!Ref Setup, true]

Resources:
  # Replaced to use GiHub instead
  # #----------------------------------------------------------------------#
  # # Create CodeCommit Repository
  # # Condition: Only at Microservice Setup
  # #----------------------------------------------------------------------#
  # Repository:
  #   Type: AWS::CodeCommit::Repository
  #   Condition: Setup
  #   Properties:
  #     RepositoryName: !Ref RepositoryName
  #     Code:
  #       S3:
  #         Bucket: !Sub "${AWS::AccountId}-templates"
  #         Key: seed.zip

  #----------------------------------------------------------------------#
  # Resource CodePipeline
  # Source : https://docs.aws.amazon.com/codepipeline/latest/userguide/action-reference-CodestarConnectionSource.html
  #----------------------------------------------------------------------#
  Pipeline:
    Type: "AWS::CodePipeline::Pipeline"
    Properties:
      Name: !Sub ${RepositoryName}-${BranchName}
      RoleArn: !Sub "arn:aws:iam::${AWS::AccountId}:role/CodePipelineRole"
      ArtifactStore:
        Type: S3
        Location: !Ref BucketName
      Stages:
        - Name: Source
          Actions:
            - Name: App
              ActionTypeId:
                Version: "1"
                Owner: AWS
                Category: Source
                Provider: CodeStarSourceConnection
              Configuration:
                PollForSourceChanges: "true"
                ConnectionArn: arn:aws:codestar-connections:ca-central-1:257304437163:connection/beee66d6-896b-4d03-839d-013e051472f7
                FullRepositoryId:
                  Fn::Sub: ${Username}/${RepositoryName}
                BranchName: !Ref BranchName
                OutputArtifactFormat: "CODE_ZIP"
              OutputArtifacts:
                - Name: Source
              RunOrder: 1

        #----------------------------------------------------------------------#
        # Regardless of branch type, the CI Stage will always be created.
        #----------------------------------------------------------------------#
        - Name: Continuous-Integration
          Actions:
            - Name: CI-Action
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              OutputArtifacts:
                - Name: CIAction
              InputArtifacts:
                - Name: Source
              Configuration:
                ProjectName: !Sub ${RepositoryName}-CIAction
              RunOrder: 1

        #----------------------------------------------------------------------#
        # If BranchName=Develop, then create the CD Stage to deploy to Dev
        #----------------------------------------------------------------------#
        - !If
          - BranchDevelop
          - Name: Deploy-Dev
            Actions:
              - Name: CDActionDev
                ActionTypeId:
                  Category: Build
                  Owner: AWS
                  Version: "1"
                  Provider: CodeBuild
                InputArtifacts:
                  - Name: Source
                OutputArtifacts:
                  - Name: CDActionDev
                Configuration:
                  ProjectName: !Sub ${RepositoryName}-CDActionDev
                RunOrder: 1
          - !Ref AWS::NoValue

        #----------------------------------------------------------------------#
        # If BranchName=Master, then create the CD Stage to deploy to Homolog
        #----------------------------------------------------------------------#
        - !If
          - BranchMaster
          - Name: Deploy-Homolog
            Actions:
              - Name: CDActionHomolog
                ActionTypeId:
                  Category: Build
                  Owner: AWS
                  Version: "1"
                  Provider: CodeBuild
                InputArtifacts:
                  - Name: Source
                OutputArtifacts:
                  - Name: CDActionHomolog
                Configuration:
                  ProjectName: !Sub ${RepositoryName}-CDActionHomolog
                RunOrder: 1
          - !Ref AWS::NoValue

        #----------------------------------------------------------------------#
        # If BranchName=Master, then create CD Stage to deploy to Prod
        #----------------------------------------------------------------------#
        - !If
          - BranchMaster
          - Name: Deploy-Prod
            Actions:
              - Name: CDActionProd
                ActionTypeId:
                  Category: Build
                  Owner: AWS
                  Version: "1"
                  Provider: CodeBuild
                InputArtifacts:
                  - Name: Source
                OutputArtifacts:
                  - Name: CDActionProd
                Configuration:
                  ProjectName: !Sub ${RepositoryName}-CDActionProd
                RunOrder: 2
          - !Ref AWS::NoValue

  #----------------------------------------------------------------------#
  # CodeBuild Projects
  #----------------------------------------------------------------------#
  CIAction:
    Condition: Setup
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${RepositoryName}-CIAction
      Source:
        Type: CODEPIPELINE
        BuildSpec: "buildspec/CIAction.yaml"
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:2.0
        EnvironmentVariables:
          - Name: BranchName
            Value: !Ref BranchName
      Artifacts:
        Type: CODEPIPELINE
      ServiceRole: !Sub "arn:aws:iam::${AWS::AccountId}:role/CodeBuildRole"
      TimeoutInMinutes: 10

  CDActionDev:
    Condition: Setup
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${RepositoryName}-CDActionDev
      Source:
        Type: CODEPIPELINE
        BuildSpec: "buildspec/CDAction.yaml"
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:2.0
        EnvironmentVariables:
          - Name: pipeline_environment
            Value: DEV
          - Name: BranchName
            Value: !Ref BranchName
      Artifacts:
        Type: CODEPIPELINE
      ServiceRole: !Sub "arn:aws:iam::${AWS::AccountId}:role/CodeBuildRole"
      TimeoutInMinutes: 10

  CDActionHomolog:
    Condition: Setup
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${RepositoryName}-CDActionHomolog
      Source:
        Type: CODEPIPELINE
        BuildSpec: "buildspec/CDAction.yaml"
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:2.0
        EnvironmentVariables:
          - Name: pipeline_environment
            Value: HOMOLOG
          - Name: BranchName
            Value: !Ref BranchName
      Artifacts:
        Type: CODEPIPELINE
      ServiceRole: !Sub "arn:aws:iam::${AWS::AccountId}:role/CodeBuildRole"
      TimeoutInMinutes: 10

  CDActionProd:
    Condition: Setup
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${RepositoryName}-CDActionProd
      Source:
        Type: CODEPIPELINE
        BuildSpec: "buildspec/CDAction.yaml"
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:2.0
        EnvironmentVariables:
          - Name: pipeline_environment
            Value: PROD
          - Name: BranchName
            Value: !Ref BranchName
      Artifacts:
        Type: CODEPIPELINE
      ServiceRole: !Sub "arn:aws:iam::${AWS::AccountId}:role/CodeBuildRole"
      TimeoutInMinutes: 10
